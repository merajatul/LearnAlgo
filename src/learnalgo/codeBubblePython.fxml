<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<AnchorPane id="AnchorPane" prefHeight="600.0" prefWidth="700.0" xmlns="http://javafx.com/javafx/8.0.141" xmlns:fx="http://javafx.com/fxml/1" fx:controller="learnalgo.CodeBubblePythonController">
   <children>
      <TextArea editable="false" layoutX="4.0" prefHeight="600.0" prefWidth="700.0" text="def bubble_sort(seq):&#10;    &quot;&quot;&quot;Inefficiently sort the mutable sequence (list) in place.&#10;       seq MUST BE A MUTABLE SEQUENCE.&#10; &#10;       As with list.sort() and random.shuffle this does NOT return &#10;    &quot;&quot;&quot;&#10;    changed = True&#10;    while changed:&#10;        changed = False&#10;        for i in xrange(len(seq) - 1):&#10;            if seq[i] &gt; seq[i+1]:&#10;                seq[i], seq[i+1] = seq[i+1], seq[i]&#10;                changed = True&#10;    return seq&#10; &#10;if __name__ == &quot;__main__&quot;:&#10;   &quot;&quot;&quot;Sample usage and simple test suite&quot;&quot;&quot;&#10; &#10;   from random import shuffle&#10; &#10;   testset = range(100)&#10;   testcase = testset[:] # make a copy&#10;   shuffle(testcase)&#10;   assert testcase != testset  # we've shuffled it&#10;   bubble_sort(testcase)&#10;   assert testcase == testset  # we've unshuffled it back into a copy&#10;">
         <font>
            <Font name="System Bold" size="12.0" />
         </font>
      </TextArea>
      <Button layoutX="615.0" layoutY="568.0" mnemonicParsing="false" onAction="#backButtonAction" text="BACK" />
   </children>
</AnchorPane>
