<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<AnchorPane id="AnchorPane" prefHeight="600.0" prefWidth="700.0" xmlns="http://javafx.com/javafx/8.0.141" xmlns:fx="http://javafx.com/fxml/1" fx:controller="learnalgo.CodeHeapCplusController">
   <children>
      <TextArea editable="false" prefHeight="600.0" prefWidth="700.0" text="#include &lt;iostream&gt;&#10;#include &lt;vector&gt;&#10; &#10;using namespace std;&#10; &#10;void shift_down(vector&lt;int&gt;&amp; heap,int i, int max) {&#10;    int i_big, c1, c2;&#10;    while(i &lt; max) {&#10;        i_big = i;&#10;        c1 = (2*i) + 1;&#10;        c2 = c1 + 1;&#10;        if( c1&lt;max &amp;&amp; heap[c1]&gt;heap[i_big] )&#10;            i_big = c1;&#10;        if( c2&lt;max &amp;&amp; heap[c2]&gt;heap[i_big] )&#10;            i_big = c2;&#10;        if(i_big == i) return;&#10;        swap(heap[i],heap[i_big]);&#10;        i = i_big;&#10;    }&#10;}&#10; &#10;void to_heap(vector&lt;int&gt;&amp; arr) {&#10;    int i = (arr.size()/2) - 1;&#10;    while(i &gt;= 0) {&#10;        shift_down(arr, i, arr.size());&#10;        --i;&#10;    }&#10;}&#10; &#10;void heap_sort(vector&lt;int&gt;&amp; arr) {&#10;    to_heap(arr);&#10;    int end = arr.size() - 1;&#10;    while (end &gt; 0) {&#10;        swap(arr[0], arr[end]);&#10;        shift_down(arr, 0, end);&#10;        --end;&#10;    }&#10;}&#10; &#10;int main() {&#10;    vector&lt;int&gt; data = {&#10;        12, 11, 15, 10, 9, 1, 2,&#10;        3, 13, 14, 4, 5, 6, 7, 8&#10;    };&#10;    heap_sort(data);&#10;    for(int i : data) cout &lt;&lt; i &lt;&lt; &quot; &quot;;&#10;}">
         <font>
            <Font name="System Bold" size="12.0" />
         </font>
      </TextArea>
      <Button layoutX="623.0" layoutY="545.0" mnemonicParsing="false" onAction="#backButtonAction" text="BACK" />
   </children>
</AnchorPane>
