<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<AnchorPane id="AnchorPane" prefHeight="600.0" prefWidth="700.0" xmlns="http://javafx.com/javafx/8.0.141" xmlns:fx="http://javafx.com/fxml/1" fx:controller="learnalgo.CodeHeapKotlinController">
   <children>
      <TextArea editable="false" layoutX="4.0" layoutY="4.0" prefHeight="600.0" prefWidth="700.0" text=" &#10;fun heapSort(a: IntArray) {&#10;    heapify(a)&#10;    var end = a.size - 1&#10;    while (end &gt; 0) {&#10;        val temp = a[end]&#10;        a[end] = a[0]&#10;        a[0] = temp&#10;        end--&#10;        siftDown(a, 0, end)&#10;    }&#10;}&#10; &#10;fun heapify(a: IntArray) {&#10;    var start = (a.size - 2) / 2&#10;    while (start &gt;= 0) {&#10;        siftDown(a, start, a.size - 1)&#10;        start--&#10;    }&#10;}&#10; &#10;fun siftDown(a: IntArray, start: Int, end: Int) {&#10;    var root = start&#10;    while (root * 2 + 1 &lt;= end) {&#10;        var child = root * 2 + 1&#10;        if (child + 1 &lt;= end &amp;&amp; a[child] &lt; a[child + 1]) child++&#10;        if (a[root] &lt; a[child]) {&#10;            val temp = a[root]&#10;            a[root] = a[child]&#10;            a[child] = temp&#10;            root = child&#10;        }&#10;        else return&#10;    }&#10;}&#10; &#10;fun main(args: Array&lt;String&gt;) {&#10;    val aa = arrayOf(&#10;        intArrayOf(100, 2, 56, 200, -52, 3, 99, 33, 177, -199),&#10;        intArrayOf(4, 65, 2, -31, 0, 99, 2, 83, 782, 1),&#10;        intArrayOf(12, 11, 15, 10, 9, 1, 2, 3, 13, 14, 4, 5, 6, 7, 8)&#10;    )&#10;    for (a in aa) {&#10;        heapSort(a)&#10;        println(a.joinToString(&quot;, &quot;))&#10;    }&#10;}&#10;">
         <font>
            <Font name="System Bold" size="12.0" />
         </font>
      </TextArea>
      <Button layoutX="635.0" layoutY="581.0" mnemonicParsing="false" onAction="#backButtonAction" text="BACK" />
   </children>
</AnchorPane>
